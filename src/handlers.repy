# Handler module

include util.repy

def get_handler(endpoint):
  return mycontext['api'].get(endpoint)

def post_handler(endpoint, parameters):

  if parameters.has_key('delete') and parameters['delete']:
    return mycontext['api'].delete(endpoint, parameters)
  else:
    return mycontext['api'].post(endpoint, parameters)

# ------------------------------------------------------------------------------
# Handles initial GET request from browser, outputs HTML string and closes socket.
# ------------------------------------------------------------------------------
def get_board():
  htmlresponse = generate_html_page()
  return make_http_response(200, 'OK', htmlresponse)


# ------------------------------------------------------------------------------
# Creates and adds a new entry to the global variable entries
# ------------------------------------------------------------------------------
def add_entry(parameters):
  try:
    msg = parameters['entry']
    msgid = len(mycontext['entries'])
    entry = mycontext['entry_template'] % ('entries/%d' % (msgid), msgid, msg)
    mycontext['entries'][msgid] = entry


    return make_http_response(201, 'Created', "Added new entry! <br />ID: " + str(msgid) + "<br />Message: " + msg)

  except Exception:
    raise Exception("Unable to handle add_entry request")

def remove_entry(msgid):
  try:
    del mycontext['entries'][int(msgid)]
    return make_http_response(200, 'OK', "Removed entry: " + msgid)
  except Exception:
    raise Exception("Unable to remove entry")